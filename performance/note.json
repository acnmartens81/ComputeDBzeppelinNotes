{
  "paragraphs": [
    {
      "title": "Monitor the Cluster, check memory consumption",
      "text": "%spark\n\nprintln(s\"\"\"%html\n \u003cdiv\u003e \u003cspan style\u003d\"font-weight: bold;\"\u003e \u003ca href\u003d\"http://localhost:5050\" target\u003d\"_blank\"\u003eSnappyData Pulse UI\u003c/a\u003e \u003c/span\u003e \u003cspan\u003e\u003ch5\u003e The Dashboard tab in the SnappyData Pulse UI can be used to monitor the cluster and check the memory consumed by the samples.\u003c/h5\u003e\u003c/span\u003e\u003c/div\u003e\n\"\"\")\n\n",
      "user": "anonymous",
      "dateUpdated": "Sep 22, 2017 10:57:26 AM",
      "config": {
        "colWidth": 12.0,
        "enabled": false,
        "editorMode": "ace/mode/scala",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": " \u003cdiv\u003e \u003cspan style\u003d\"font-weight: bold;\"\u003e \u003ca href\u003d\"http://localhost:5050\" target\u003d\"_blank\"\u003eSnappyData Pulse UI\u003c/a\u003e \u003c/span\u003e \u003cspan\u003e\u003ch5\u003e The Dashboard tab in the SnappyData Pulse UI can be used to monitor the cluster and check the memory consumed by the samples.\u003c/h5\u003e\u003c/span\u003e\u003c/div\u003e\n\n"
          }
        ]
      },
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003cp\u003eIn this notebook we will walk you through a simple benchmark to compare SnappyData to Spark 2.0 performance. We load millions of rows into a cached Spark DataFrame, run some analytic queries measuring its performance and then do the same using SnappyData\u0027s column table. Preferably you should have at least 8GB of RAM reserved for this test.\n"
      },
      "apps": [],
      "jobName": "paragraph_1481198595395_439645316",
      "id": "20161208-173315_1238208872",
      "dateCreated": "Dec 8, 2016 5:33:15 AM",
      "dateStarted": "Sep 22, 2017 10:03:21 AM",
      "dateFinished": "Sep 22, 2017 10:03:22 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Lets confirm SnappyData in-memory performance is 7X to 20X faster than Spark caching.",
      "text": "%snappydata.spark\nprintln(s\"\"\"%html \u003cp\u003eIn this notebook we will walk you through a simple benchmark to compare SnappyData to Spark 2.1.1 performance. We load millions of rows into a cached Spark DataFrame, run some analytic queries measuring its performance and then do the same using SnappyData\u0027s column table. Preferably you should have at least 8GB of RAM reserved for this test.\"\"\")\n\n",
      "user": "anonymous",
      "dateUpdated": "Oct 10, 2017 7:43:32 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": false,
        "editorMode": "ace/mode/text",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cp\u003eIn this notebook we will walk you through a simple benchmark to compare SnappyData to Spark 2.1.1 performance. We load millions of rows into a cached Spark DataFrame, run some analytic queries measuring its performance and then do the same using SnappyData\u0027s column table. Preferably you should have at least 8GB of RAM reserved for this test.\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1506074342244_748669304",
      "id": "20170922-095902_338451451",
      "dateCreated": "Sep 22, 2017 9:59:02 AM",
      "dateStarted": "Sep 22, 2017 11:27:32 AM",
      "dateFinished": "Sep 22, 2017 11:27:33 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Define a function \"benchmark\", which tells us the average time to run queries after doing initial warmups",
      "text": "%snappydata.spark\n def benchmark(name: String, times: Int \u003d 10, warmups: Int \u003d 6)(f: \u003d\u003e Unit) {\n          for (i \u003c- 1 to warmups) {\n            f\n          }\n          val startTime \u003d System.nanoTime\n          for (i \u003c- 1 to times) {\n            f\n          }\n          val endTime \u003d System.nanoTime\n          println(s\"Average time taken in $name for $times runs: \" +\n            (endTime - startTime).toDouble / (times * 1000000.0) + \" millis\")\n        }",
      "user": "anonymous",
      "dateUpdated": "Oct 11, 2017 3:33:28 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "title": true,
        "editorMode": "ace/mode/text",
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\nbenchmark: (name: String, times: Int, warmups: Int)(f: \u003d\u003e Unit)Unit\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1481198666402_-709475411",
      "id": "20161208-173426_1057142313",
      "dateCreated": "Dec 8, 2016 5:34:26 AM",
      "dateStarted": "Oct 11, 2017 3:21:54 PM",
      "dateFinished": "Oct 11, 2017 3:21:55 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Create a DataFrame and temp table using Spark\u0027s range method. Cache it in Spark to get optimal performance. This will create a DataFrame of 100 million records",
      "text": "%snappydata.spark\nvar testDF \u003d spark.range(100000000).selectExpr(\"id\", \"concat(\u0027sym\u0027, cast((id % 100) as STRING)) as sym\")\ntestDF.cache\ntestDF.createOrReplaceTempView(\"sparkCacheTable\")",
      "user": "anonymous",
      "dateUpdated": "Oct 11, 2017 3:22:10 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/text",
        "title": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\ntestDF: org.apache.spark.sql.DataFrame \u003d [id: bigint, sym: string]\n\nres83: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [id: bigint, sym: string]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1481198807994_357600210",
      "id": "20161208-173647_1343819618",
      "dateCreated": "Dec 8, 2016 5:36:47 AM",
      "dateStarted": "Oct 11, 2017 3:22:10 PM",
      "dateFinished": "Oct 11, 2017 3:22:12 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Now run a query and to check the performance. Compute average. This will ensure it touches all records while scanning.",
      "text": "%snappydata.spark\nbenchmark(\"Spark perf\") {spark.sql(\"select sym, avg(id) from sparkCacheTable group by sym\").collect()}",
      "user": "anonymous",
      "dateUpdated": "Oct 11, 2017 3:22:18 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "title": true,
        "editorMode": "ace/mode/text",
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Average time taken in Spark perf for 10 runs: 9725.0957259 millis\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1481198865450_-1691294952",
      "id": "20161208-173745_196238312",
      "dateCreated": "Dec 8, 2016 5:37:45 AM",
      "dateStarted": "Oct 11, 2017 3:22:18 PM",
      "dateFinished": "Oct 11, 2017 3:25:47 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Clean up the JVM. This will ensure all in memory artifacts for Spark is cleaned up.",
      "text": "%snappydata.spark\ntestDF.unpersist()\nSystem.gc()\nSystem.runFinalization()",
      "user": "anonymous",
      "dateUpdated": "Oct 11, 2017 3:27:11 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "title": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "editorMode": "ace/mode/text",
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\nres88: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [id: bigint, sym: string]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1481198911380_1275180365",
      "id": "20161208-173831_1815673868",
      "dateCreated": "Dec 8, 2016 5:38:31 AM",
      "dateStarted": "Oct 11, 2017 3:26:59 PM",
      "dateFinished": "Oct 11, 2017 3:27:00 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Create a SnappySession.",
      "text": "%snappydata.spark\nval snappy \u003d new org.apache.spark.sql.SnappySession(spark.sparkContext)\n\nprintln(s\"\"\"%html\n \u003cdiv\u003e \u003cspan style\u003d\"font-weight: bold;\"\u003e \u003ca href\u003d\"http://snappydatainc.github.io/snappydata/programming_guide/sparksession_snappysession_and_snappystreamingcontext/#create-a-snappysession\" target\u003d\"_blank\"\u003eKnow more about creating SnappySession\u003c/a\u003e \u003c/span\u003e\u003c/div\u003e\n\"\"\")",
      "user": "anonymous",
      "dateUpdated": "Oct 11, 2017 3:27:08 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/text",
        "title": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\nsnappy: org.apache.spark.sql.SnappySession \u003d org.apache.spark.sql.SnappySession@36c29e68\n"
          },
          {
            "type": "HTML",
            "data": " \u003cdiv\u003e \u003cspan style\u003d\"font-weight: bold;\"\u003e \u003ca href\u003d\"http://snappydatainc.github.io/snappydata/programming_guide/sparksession_snappysession_and_snappystreamingcontext/#create-a-snappysession\" target\u003d\"_blank\"\u003eKnow more about creating SnappySession\u003c/a\u003e \u003c/span\u003e\u003c/div\u003e\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1481198944018_395891210",
      "id": "20161208-173904_1370701056",
      "dateCreated": "Dec 8, 2016 5:39:04 AM",
      "dateStarted": "Oct 11, 2017 3:27:04 PM",
      "dateFinished": "Oct 11, 2017 3:27:05 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Create a similar 100 million record DataFrame",
      "text": "%snappydata.spark\ntestDF \u003d snappy.range(100000000).selectExpr(\"id\", \"concat(\u0027sym\u0027, cast((id % 100) as varchar(10))) as sym\")",
      "user": "anonymous",
      "dateUpdated": "Oct 11, 2017 3:27:23 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/text",
        "title": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\ntestDF: org.apache.spark.sql.DataFrame \u003d [ID: bigint, SYM: string]\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1481198981936_1409381110",
      "id": "20161208-173941_466027687",
      "dateCreated": "Dec 8, 2016 5:39:41 AM",
      "dateStarted": "Oct 11, 2017 3:27:20 PM",
      "dateFinished": "Oct 11, 2017 3:27:21 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Create the table",
      "text": "%snappydata.spark\nsnappy.sql(\"drop table if exists snappyTable\")\nsnappy.sql(\"create table snappyTable (id bigint not null, sym varchar(10) not null) using column\")\n\nprintln(s\"\"\"%html\n \u003cdiv\u003e \u003cspan style\u003d\"font-weight: bold;\"\u003e \u003ca href\u003d\"http://snappydatainc.github.io/snappydata/reference/sql_reference/create-table/\" target\u003d\"_blank\"\u003eKnow more about creating tables\u003c/a\u003e \u003c/span\u003e\u003c/div\u003e\n\"\"\")",
      "user": "anonymous",
      "dateUpdated": "Oct 11, 2017 3:27:31 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/text",
        "title": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\nres95: org.apache.spark.sql.CachedDataFrame \u003d []\n\nres96: org.apache.spark.sql.CachedDataFrame \u003d []\n"
          },
          {
            "type": "HTML",
            "data": " \u003cdiv\u003e \u003cspan style\u003d\"font-weight: bold;\"\u003e \u003ca href\u003d\"http://snappydatainc.github.io/snappydata/reference/sql_reference/create-table/\" target\u003d\"_blank\"\u003eKnow more about creating tables\u003c/a\u003e \u003c/span\u003e\u003c/div\u003e\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1481199018737_69947595",
      "id": "20161208-174018_910018763",
      "dateCreated": "Dec 8, 2016 5:40:18 AM",
      "dateStarted": "Oct 11, 2017 3:27:27 PM",
      "dateFinished": "Oct 11, 2017 3:27:29 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Insert the created a DataFrame into the table. Measure its performance",
      "text": "%snappydata.spark\nbenchmark(\"Snappy insert perf\", 1, 0) {testDF.write.insertInto(\"snappyTable\") }",
      "user": "anonymous",
      "dateUpdated": "Oct 11, 2017 3:27:53 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/text",
        "title": true,
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "editorHide": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Average time taken in Snappy insert perf for 1 runs: 12691.084082 millis\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1481199048354_405864033",
      "id": "20161208-174048_109536533",
      "dateCreated": "Dec 8, 2016 5:40:48 AM",
      "dateStarted": "Oct 11, 2017 3:27:37 PM",
      "dateFinished": "Oct 11, 2017 3:27:50 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Now lets run the same benchmark we ran against Spark DataFrame.",
      "text": "%snappydata.spark\n benchmark(\"Snappy perf\") {snappy.sql(\"select sym, avg(id) from snappyTable group by sym\").collect()} ",
      "user": "anonymous",
      "dateUpdated": "Oct 11, 2017 3:32:58 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "title": true,
        "editorMode": "ace/mode/text",
        "results": {},
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        },
        "editorHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "Average time taken in Snappy perf for 10 runs: 537.1079637 millis\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1481199119962_291852476",
      "id": "20161208-174159_2057503632",
      "dateCreated": "Dec 8, 2016 5:41:59 AM",
      "dateStarted": "Oct 11, 2017 3:27:57 PM",
      "dateFinished": "Oct 11, 2017 3:28:07 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Querying Snappydata from snappy-shell",
      "text": "%snappydata.spark\nprintln(s\"\"\"%html\n\u003ch4\u003eThe SnappyData Shell (snappy-shell) provides a simple command line interface to interact with the SnappyData cluster.\u003cbr\u003eTo query SnappyData from snappy-shell:\u003c/h4\u003e\n\u003ch5\u003e\n\u003col\u003e\n\u003cli\u003e Login to this the virtual machine using SSH : \u003cbr\u003e\u003cb\u003e\u003ci\u003essh -i \u0026lt; key-pair \u0026gt; localhost \u003c/i\u003e\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003c/li\u003e\n\u003cli\u003e In the command prompt, go to the SnappyData home directory: \u003cbr\u003e \u003cb\u003e\u003ci\u003ecd /snappydata/downloads/snappydata-1.0.0-bin/bin \u003c/i\u003e\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003c/li\u003e\n\u003cli\u003e Start the snappy-shell: \u003cbr\u003e \u003cb\u003e\u003ci\u003e./snappy-shell\u003c/i\u003e\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003c/li\u003e\n\u003cli\u003e Connect to the SnappyData cluster from snappy-shell:\u003cbr\u003e\n\u003cb\u003e\u003ci\u003esnappy\u003e connect client \u0027localhost:1527\u0027;\u003c/i\u003e\u003c/b\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/h5\u003e\"\"\")",
      "user": "anonymous",
      "dateUpdated": "Oct 11, 2017 3:21:11 PM",
      "config": {
        "colWidth": 12.0,
        "enabled": false,
        "editorMode": "ace/mode/text",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch4\u003eThe SnappyData Shell (snappy-shell) provides a simple command line interface to interact with the SnappyData cluster.\u003cbr\u003eTo query SnappyData from snappy-shell:\u003c/h4\u003e\n\u003ch5\u003e\n\u003col\u003e\n\u003cli\u003e Login to this the virtual machine using SSH : \u003cbr\u003e\u003cb\u003e\u003ci\u003essh -i \u0026lt; key-pair \u0026gt; localhost \u003c/i\u003e\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003c/li\u003e\n\u003cli\u003e In the command prompt, go to the SnappyData home directory: \u003cbr\u003e \u003cb\u003e\u003ci\u003ecd /snappydata/downloads/snappydata-1.0.0-bin/bin \u003c/i\u003e\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003c/li\u003e\n\u003cli\u003e Start the snappy-shell: \u003cbr\u003e \u003cb\u003e\u003ci\u003e./snappy-shell\u003c/i\u003e\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003c/li\u003e\n\u003cli\u003e Connect to the SnappyData cluster from snappy-shell:\u003cbr\u003e\n\u003cb\u003e\u003ci\u003esnappy\u003e connect client \u0027localhost:1527\u0027;\u003c/i\u003e\u003c/b\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/h5\u003e\n"
          }
        ]
      },
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch4\u003eThe SnappyData Shell (snappy-shell) provides a simple command line interface to interact with the SnappyData cluster.\u003cbr\u003eTo query SnappyData from snappy-shell:\u003c/h4\u003e\n\u003ch5\u003e\n\u003col\u003e\n\u003cli\u003e Login to this the virtual machine using SSH : \u003cbr\u003e\u003cb\u003e\u003ci\u003essh -i \u0026lt; key-pair \u0026gt; localhost \u003c/i\u003e\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003c/li\u003e\n\u003cli\u003e In the command prompt, go to the SnappyData home directory: \u003cbr\u003e \u003cb\u003e\u003ci\u003ecd /snappydata/downloads/snappydata-0.7-bin/bin \u003c/i\u003e\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003c/li\u003e\n\u003cli\u003e Start the snappy-shell: \u003cbr\u003e \u003cb\u003e\u003ci\u003e./snappy-shell\u003c/i\u003e\u003c/b\u003e\u003cbr\u003e\u003cbr\u003e\u003c/li\u003e\n\u003cli\u003e Connect to the SnappyData cluster from snappy-shell:\u003cbr\u003e\n\u003cb\u003e\u003ci\u003esnappy\u003e connect client \u0027localhost:1527\u0027;\u003c/i\u003e\u003c/b\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003c/h5\u003e\n"
      },
      "apps": [],
      "jobName": "paragraph_1481701026742_1039347222",
      "id": "20161214-130706_18117927",
      "dateCreated": "Dec 14, 2016 1:07:06 AM",
      "dateStarted": "Oct 11, 2017 3:21:02 PM",
      "dateFinished": "Oct 11, 2017 3:21:03 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "title": "Using Java Application (JDBC) to connect to SnappyData cluster:",
      "text": "%snappydata.spark\nprintln(s\"\"\"%html\n\u003ch4\u003eJDBC enables you to connect the SnappyData cluster from your application or any third party BI tools. \u003cbr\u003e\u003cbr\u003eTo connect with the SnappyData Cluster: \u003c/h4\u003e\n\u003ch5\u003e\n\u003cul\u003e\n\u003cli\u003eDownload the SnappyData JDBC Client driver (*.jar). (provide hyperlink) \u003c/i\u003e\u003c/b\u003e\u003c/li\u003e\n\u003cli\u003eConnect to the SnappyData cluster, use the following JDBC URI : \u003cbr\u003e\u003cb\u003e\u003ci\u003ejdbc:snappydata://localhost:1527 \u003c/i\u003e\u003c/b\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/h5\u003e\"\"\")\n\n\n",
      "dateUpdated": "Dec 21, 2016 5:50:44 AM",
      "config": {
        "colWidth": 12.0,
        "enabled": false,
        "editorMode": "ace/mode/scala",
        "title": true,
        "editorHide": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ]
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch4\u003eJDBC enables you to connect the SnappyData cluster from your application or any third party BI tools. \u003cbr\u003e\u003cbr\u003eTo connect with the SnappyData Cluster: \u003c/h4\u003e\n\u003ch5\u003e\n\u003cul\u003e\n\u003cli\u003eDownload the SnappyData JDBC Client driver (*.jar). (provide hyperlink) \u003c/i\u003e\u003c/b\u003e\u003c/li\u003e\n\u003cli\u003eConnect to the SnappyData cluster, use the following JDBC URI : \u003cbr\u003e\u003cb\u003e\u003ci\u003ejdbc:snappydata://localhost:1527 \u003c/i\u003e\u003c/b\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/h5\u003e\n"
          }
        ]
      },
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch4\u003eJDBC enables you to connect the SnappyData cluster from your application or any third party BI tools. \u003cbr\u003e\u003cbr\u003eTo connect with the SnappyData Cluster: \u003c/h4\u003e\n\u003ch5\u003e\n\u003cul\u003e\n\u003cli\u003eDownload the SnappyData JDBC Client driver (*.jar). (provide hyperlink) \u003c/i\u003e\u003c/b\u003e\u003c/li\u003e\n\u003cli\u003eConnect to the SnappyData cluster, use the following JDBC URI : \u003cbr\u003e\u003cb\u003e\u003ci\u003ejdbc:snappydata://localhost:1527 \u003c/i\u003e\u003c/b\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/h5\u003e\n"
      },
      "apps": [],
      "jobName": "paragraph_1481706911891_485084924",
      "id": "20161214-144511_105084563",
      "dateCreated": "Dec 14, 2016 2:45:11 AM",
      "dateStarted": "Dec 14, 2016 4:31:02 AM",
      "dateFinished": "Dec 14, 2016 4:31:03 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%snappydata.spark\nprintln(s\"\"\"%html\n\u003ch2\u003eCongratulations! You have completed this tutorial.\u003c/h2\u003e\n\u003ch3\u003eNow What?\u003c/h3\u003e\n\u003ch4\u003eLearn more about SnappyData from \u003cb\u003e\u003ca href\u003d\u0027http://snappydatainc.github.io/snappydata/\u0027\u003ehere\u003c/a\u003e\u003c/b\u003e\u003c/h4\u003e\n\u003ch4\u003eIf you\u0027re curious to try out more \u003cb\u003e\u003ca href\u003d\u0027http://snappydatainc.github.io/snappydata/howto/\u0027\u003eexamples\u003c/a\u003e\u003c/b\u003e \u003c/h4\u003e\"\"\")\n",
      "user": "anonymous",
      "dateUpdated": "Sep 22, 2017 10:17:10 AM",
      "config": {
        "colWidth": 12.0,
        "enabled": false,
        "editorMode": "ace/mode/text",
        "editorHide": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300.0,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "editorSetting": {
          "language": "text",
          "editOnDblClick": false
        }
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003ch2\u003eCongratulations! You have completed this tutorial.\u003c/h2\u003e\n\u003ch3\u003eNow What?\u003c/h3\u003e\n\u003ch4\u003eLearn more about SnappyData from \u003cb\u003e\u003ca href\u003d\u0027http://snappydatainc.github.io/snappydata/\u0027\u003ehere\u003c/a\u003e\u003c/b\u003e\u003c/h4\u003e\n\u003ch4\u003eIf you\u0027re curious to try out more \u003cb\u003e\u003ca href\u003d\u0027http://snappydatainc.github.io/snappydata/howto/\u0027\u003eexamples\u003c/a\u003e\u003c/b\u003e \u003c/h4\u003e\n"
          }
        ]
      },
      "result": {
        "code": "SUCCESS",
        "type": "HTML",
        "msg": "\u003ch2\u003eCongratulations! You have completed this tutorial.\u003c/h2\u003e\n\u003ch3\u003eNow What?\u003c/h3\u003e\n\u003ch4\u003eLearn more about SnappyData from \u003cb\u003e\u003ca href\u003d\u0027http://snappydatainc.github.io/snappydata/\u0027\u003ehere\u003c/a\u003e\u003c/b\u003e\u003c/h4\u003e\n\u003ch4\u003eIf you\u0027re curious to try out more \u003cb\u003e\u003ca href\u003d\u0027http://snappydatainc.github.io/howto\u0027\u003eexamples\u003c/a\u003e\u003c/b\u003e \u003c/h4\u003e\n"
      },
      "apps": [],
      "jobName": "paragraph_1481199166714_1191672885",
      "id": "20161208-174246_637888674",
      "dateCreated": "Dec 8, 2016 5:42:46 AM",
      "dateStarted": "Sep 22, 2017 10:17:03 AM",
      "dateFinished": "Sep 22, 2017 10:17:03 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "",
      "dateUpdated": "Dec 8, 2016 5:44:08 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1481199238170_-1306608993",
      "id": "20161208-174358_90759117",
      "dateCreated": "Dec 8, 2016 5:43:58 AM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "SnappyData Performance Benchmark",
  "id": "performance",
  "angularObjects": {
    "2CUPYRF1J:shared_process": [],
    "2CWRPU8JR:shared_process": [],
    "2CXQVK4RY:shared_process": [],
    "2CVUVZY5U:shared_process": [],
    "2CWNXRB4F:shared_process": [],
    "2CWCX2TBB:shared_process": [],
    "2CWZATV7C:shared_process": [],
    "2CXCYPQJJ:shared_process": [],
    "2CUFT6YA4:shared_process": [],
    "2CVNV3K16:shared_process": [],
    "2CV8B5KY9:shared_process": [],
    "2CURSNY3B:shared_process": [],
    "2CV53ZW6U:shared_process": [],
    "2CWS5KNUY:shared_process": [],
    "2CX5KN37P:shared_process": [],
    "2CVC3GD5D:shared_process": [],
    "2CWE8DH8B:shared_process": [],
    "2CUTT5BSE:existing_process": [],
    "2CWQ5XXY4:shared_process": [],
    "2CVK8MSY5:shared_process": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}